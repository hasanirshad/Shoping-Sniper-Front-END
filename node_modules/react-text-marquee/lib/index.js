(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'react', 'prop-types'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('react'), require('prop-types'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.React, global.propTypes);
    global.index = mod.exports;
  }
})(this, function (exports, _react, _propTypes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var FPS = 20;
  var STEP = 1;
  var TIMEOUT = 1 / FPS * 1000;

  var Marquee = function (_Component) {
    _inherits(Marquee, _Component);

    function Marquee() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Marquee);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Marquee.__proto__ || Object.getPrototypeOf(Marquee)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        animatedWidth: 0,
        overflowWidth: 0
      }, _this.handleMouseEnter = function () {
        if (_this.props.hoverToStop) {
          clearTimeout(_this.marqueeTimer);
        } else if (_this.state.overflowWidth > 0) {
          _this.startAnimation();
        }
      }, _this.handleMouseLeave = function () {
        if (_this.props.hoverToStop && _this.state.overflowWidth > 0) {
          _this.startAnimation();
        } else {
          clearTimeout(_this.marqueeTimer);
          _this.setState({ animatedWidth: 0 });
        }
      }, _this.startAnimation = function () {
        clearTimeout(_this.marqueeTimer);
        var isLeading = _this.state.animatedWidth === 0;
        var timeout = isLeading ? _this.props.leading : TIMEOUT;

        var animate = function animate() {
          var overflowWidth = _this.state.overflowWidth;

          var animatedWidth = _this.state.animatedWidth + STEP;
          var isRoundOver = animatedWidth > overflowWidth;

          if (isRoundOver) {
            if (_this.props.loop) {
              animatedWidth = 0;
            } else {
              return;
            }
          }

          if (isRoundOver && _this.props.trailing) {
            _this.marqueeTimer = setTimeout(function () {
              _this.setState({ animatedWidth: animatedWidth });
              _this.marqueeTimer = setTimeout(animate, TIMEOUT);
            }, _this.props.trailing);
          } else {
            _this.setState({ animatedWidth: animatedWidth });
            _this.marqueeTimer = setTimeout(animate, TIMEOUT);
          }
        };

        _this.marqueeTimer = setTimeout(animate, timeout);
      }, _this.measureText = function () {
        var container = _this.container;
        var node = _this.text;

        if (container && node) {
          var containerWidth = container.offsetWidth;
          var textWidth = node.offsetWidth;
          var overflowWidth = textWidth - containerWidth;

          if (overflowWidth !== _this.state.overflowWidth) {
            _this.setState({ overflowWidth: overflowWidth });
          }
        }
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Marquee, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.measureText();

        if (this.props.hoverToStop) {
          this.startAnimation();
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.measureText();

        if (this.props.hoverToStop) {
          this.startAnimation();
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        var _this2 = this;

        clearTimeout(this.marqueeTimer);
        setTimeout(function () {
          return clearTimeout(_this2.marqueeTimer);
        }, TIMEOUT);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (this.props.text.length !== nextProps.text.length) {
          clearTimeout(this.marqueeTimer);
          this.setState({ animatedWidth: 0 });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this3 = this;

        var style = {
          'position': 'relative',
          'right': this.state.animatedWidth,
          'whiteSpace': 'nowrap'
        };

        if (this.state.overflowWidth < 0) {
          return _react2.default.createElement(
            'div',
            {
              ref: function ref(el) {
                _this3.container = el;
              },
              className: 'ui-marquee ' + this.props.className,
              style: { overflow: 'hidden' }
            },
            _react2.default.createElement(
              'span',
              {
                ref: function ref(el) {
                  _this3.text = el;
                },
                style: style,
                title: this.props.text
              },
              this.props.text
            )
          );
        }

        return _react2.default.createElement(
          'div',
          {
            ref: function ref(el) {
              _this3.container = el;
            },
            className: ('ui-marquee ' + this.props.className).trim(),
            style: { overflow: 'hidden' },
            onMouseEnter: this.handleMouseEnter,
            onMouseLeave: this.handleMouseLeave
          },
          _react2.default.createElement(
            'span',
            {
              ref: function ref(el) {
                _this3.text = el;
              },
              style: style,
              title: this.props.text
            },
            this.props.text
          )
        );
      }
    }]);

    return Marquee;
  }(_react.Component);

  Marquee.displayName = 'Marquee';
  Marquee.propTypes = {
    text: _propTypes2.default.string,
    hoverToStop: _propTypes2.default.bool,
    loop: _propTypes2.default.bool,
    leading: _propTypes2.default.number,
    trailing: _propTypes2.default.number,
    className: _propTypes2.default.string
  };
  Marquee.defaultProps = {
    text: '',
    hoverToStop: false,
    loop: false,
    leading: 0,
    trailing: 0,
    className: ''
  };
  exports.default = Marquee;
});